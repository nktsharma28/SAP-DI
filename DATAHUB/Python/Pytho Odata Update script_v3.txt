import xml.etree.ElementTree as et 
import json

import requests
import pandas as pd
e = {'col1': ['1000054','1000080'],'EngagementSegment_SDK':['CLUSTER_1','CLUSTER_2'],'GreenAdvocacy_SDK':['CLUSTER_3','CLUSTER_2'],'Offering_SDK':['OFFER_2','OFFER_3']}
#d = {'col1': ['1000080','1000054']}
df = pd.DataFrame(data=e)
df['col1'] = df['col1'].apply(str)
df1=df['col1'].values.tolist()
f2 = '{}'
url="https://my348548.crm.ondemand.com/sap/c4c/odata/cust/v1/lifestyleandengagementdata/CustomerCollection"

#payload="{\r\n\"EngagementSegment_SDK\": \"CLUSTER_4\",\r\n\"GreenAdvocacy_SDK\": \"CLUSTER_3\",\r\n\"Offering_SDK\": \"OFFER_1\"\r\n}"
headers = {
    'x-csrf-token': 'fetch',
    'Authorization': 'Basic Q09ORklHSU1QQUNUMjpJbXBhY3QxMjM=',
    'Content-Type': 'application/json',
    'Cookie': 'SAP_SESSIONID_LTQ_044=KoHgPi7RwTttzeUmAKpO5IEzw9mNSRHrnWUAFj6wP38%3d; sap-usercontext=sap-client=044'
    }
response = requests.request("get", url, headers=headers, data=payload)
print(response.headers)
df3= pd.DataFrame.from_dict(response.headers, orient="index")
f2 = '{}'
df4=df3.loc["x-csrf-token"].values.tolist()
df5=df3.loc["set-cookie"].values.tolist()

#df2 = pd.DataFrame(data=e)
for i in df1:
    a="'" + i + "'"
    print(a)
    id=i
    print(id)
    url="https://my348548.crm.ondemand.com/sap/c4c/odata/cust/v1/lifestyleandengagementdata/CustomerCollection?$filter=InternalID eq "+''+a
    #payload="{\r\n\"EngagementSegment_SDK\": \"CLUSTER_4\",\r\n\"GreenAdvocacy_SDK\": \"CLUSTER_3\",\r\n\"Offering_SDK\": \"OFFER_1\"\r\n}"
    headers = {
    
    'Authorization': 'Basic Q09ORklHSU1QQUNUMjpJbXBhY3QxMjM=',
    'Content-Type': 'application/json',
    'Cookie': f2.format(*df5)
             }
   
    response = requests.request("get", url, headers=headers)
    root = et.fromstring(response.text)
    a1=''
    for child in root:
        for i in child:
            if i.tag=='{http://www.w3.org/2005/Atom}id'  :
                a1=i.text
    
    url2=a1
    dict=json.dumps(df[df['col1']==id].set_index('col1').to_dict('records'), sort_keys=False, indent=3)
    payload = dict[1:-1]
    print(url2)
    headers = {
    'x-csrf-token': f2.format(*df4),
    'Authorization': 'Basic Q09ORklHSU1QQUNUMjpJbXBhY3QxMjM=',
    'Content-Type': 'application/json',
    'Cookie': f2.format(*df5)
    }
    response = requests.request("PATCH", url2, headers=headers, data=payload)
    print(payload)            
                
    print(response.text)
                